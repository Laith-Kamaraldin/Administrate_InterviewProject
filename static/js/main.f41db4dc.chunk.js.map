{"version":3,"sources":["components/OrganizationForm.js","components/PeopleForm.js","firebase.js","components/AddressBook.js","App.js","reportWebVitals.js","index.js"],"names":["AddOrganizations","props","values","organization","mobile","address","useState","fieldValues","setFieldValues","useEffect","currentId","organizations","handleInputChange","e","target","name","value","class","autoComplete","onSubmit","preventDefault","formActionsOrganizations","className","type","placeholder","onChange","AddPeople","defaultValues","firstName","lastName","email","contacts","formActionsContacts","firebaseDB","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","Addresses","isLoading","setIsLoading","setCurrentId","setOrganizations","setContacts","child","on","snapshot","val","href","object","push","error","console","set","Accordion","Object","keys","map","id","Card","Toggle","as","Header","eventKey","scope","onClick","key","window","confirm","remove","Collapse","Body","contact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f41db4dc.chunk.js","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\n\r\nconst AddOrganizations = (props) => {\r\n    const values = {\r\n        organization: \"\",\r\n        mobile: \"\",\r\n        address: \"\"   \r\n    }\r\n\r\n    var [fieldValues,setFieldValues] = useState(values);\r\n\r\n    useEffect(() => {\r\n        if(props.currentId=='')\r\n            setFieldValues({\r\n                ...values\r\n            })\r\n        else\r\n            setFieldValues({\r\n                ...props.organizations[props.currentId]\r\n             })\r\n    }, [props.currentId, props.organizations])\r\n\r\n\r\n    const handleInputChange = e =>{\r\n        var{name, value} = e.target\r\n        setFieldValues({\r\n            ...fieldValues,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    const handleFormSubmit = e =>{\r\n        e.preventDefault();\r\n        props.formActionsOrganizations(fieldValues)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <h5 class=\"formHeader\">Add Organization</h5>\r\n        <form autoComplete = \"off\" onSubmit={handleFormSubmit}>\r\n\r\n            <div className=\"input-group mb-3\">\r\n                <input  type=\"text\"  className=\"form-control\" placeholder=\"Organization Name\"  name=\"organization\" value={fieldValues.organization} onChange={handleInputChange}/> \r\n            </div>\r\n\r\n            <div className=\"input-group mb-3\">\r\n                <input  type=\"text\"  className=\"form-control\" placeholder=\"Organization Contact No\"  name=\"mobile\" value={fieldValues.mobile} onChange={handleInputChange}/> \r\n            </div>\r\n\r\n            <div className=\"input-group mb-3\">\r\n                <textarea  type=\"text\"  className=\"form-control\" placeholder=\"Organization Address\"  name=\"address\" value={fieldValues.address} onChange={handleInputChange}/> \r\n            </div>    \r\n\r\n            <div className=\"form-group\">\r\n            <input type=\"submit\" value={props.currentId == '' ? \"Submit Organzation\":\"Update Organization\"} className=\"btn btn-primary btn-block\"/>\r\n        </div>\r\n\r\n        </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddOrganizations;","import React,{useState,useEffect} from \"react\";\r\n\r\nconst AddPeople = (props) => {\r\n    const defaultValues = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        mobile: \"\",\r\n        email: \"\",\r\n        organization: \"\",\r\n        address: \"\"\r\n        \r\n    }\r\n\r\n    var [fieldValues,setFieldValues] = useState(defaultValues);\r\n\r\n    useEffect(() => {\r\n        if(props.currentId=='')\r\n            setFieldValues({\r\n                ...defaultValues\r\n            })\r\n        else\r\n            setFieldValues({\r\n                ...props.contacts[props.currentId]\r\n             })\r\n    }, [props.currentId, props.contacts])\r\n\r\n\r\n    const handleInputChange = e =>{\r\n        var{name, value} = e.target\r\n        setFieldValues({\r\n            ...fieldValues,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    const handleFormSubmit = e =>{\r\n        e.preventDefault();\r\n        props.formActionsContacts(fieldValues)\r\n    }\r\n  \r\n\r\n    return ( \r\n        <div>  \r\n        <h5 class=\"formHeader\">Add Contact</h5>\r\n        <form autoComplete = \"off\" onSubmit={handleFormSubmit}>\r\n                   \r\n            <div className=\"input-group mb-3\">\r\n                <input  type=\"text\"  className=\"form-control\" placeholder=\"First Name\"  name=\"firstName\" value={fieldValues.firstName} onChange={handleInputChange}/> \r\n            </div>\r\n\r\n\r\n            <div className=\"input-group mb-3\">\r\n                <input  type=\"text\"  className=\"form-control\" placeholder=\"Last Name\"  name=\"lastName\" value={fieldValues.lastName} onChange={handleInputChange}/> \r\n            </div>\r\n\r\n            <div className=\"input-group mb-3\">\r\n                <input  type=\"text\"  className=\"form-control\" placeholder=\"Email\"  name=\"email\" value={fieldValues.email} onChange={handleInputChange}/> \r\n            </div>\r\n            \r\n            <div className=\"input-group mb-3\">\r\n                <input  type=\"text\"  className=\"form-control\" placeholder=\"Mobile No\"  name=\"mobile\" value={fieldValues.mobile} onChange={handleInputChange}/> \r\n            </div>\r\n\r\n            <div className=\"input-group mb-3\">\r\n                <input  type=\"text\"  className=\"form-control\" placeholder=\"Organization Name\"  name=\"organization\" value={fieldValues.organization} onChange={handleInputChange}/> \r\n            </div>\r\n\r\n            <div className=\"input-group mb-3\">\r\n                <textarea  type=\"text\"  className=\"form-control\" placeholder=\"Address\"  name=\"address\" value={fieldValues.address} onChange={handleInputChange}/> \r\n            </div>    \r\n\r\n            <div className=\"form-group\">\r\n            <input type=\"submit\" value={props.currentId == '' ? \"Add Contact\":\"Update Contact\"} className=\"btn btn-primary btn-block\"/>\r\n        </div>\r\n        \r\n            \r\n        </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddPeople;","import firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCg986RkHYrUQyyEKk31FR08DjRLqRh3Ww\",\r\n    authDomain: \"administrate-contact-book.firebaseapp.com\",\r\n    databaseURL: \"https://administrate-contact-book-default-rtdb.firebaseio.com\",\r\n    projectId: \"administrate-contact-book\",\r\n    storageBucket: \"administrate-contact-book.appspot.com\",\r\n    messagingSenderId: \"381751760993\",\r\n    appId: \"1:381751760993:web:b9446042bd47d536b5b220\"\r\n  };\r\n  // Initialize Firebase\r\n  var firebaseDB = firebase.initializeApp(firebaseConfig);\r\n  export default firebaseDB.database().ref();\r\n  //exporting db so it can be imported in other files","import React, {useState, useEffect } from \"react\";\r\nimport AddOrganizations from \"./OrganizationForm\";\r\nimport AddPeople from \"./PeopleForm\";\r\nimport firebaseDB from '../firebase';\r\n// import Tabs from 'react-bootstrap/Tabs';\r\n// import Tab from 'react-bootstrap/Tab';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst Addresses = () => {\r\n    // ----------------State-----------------\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [currentId,setCurrentId] = useState('')\r\n    const [organizations, setOrganizations] = useState({})\r\n    const [contacts, setContacts] = useState({})\r\n\r\n    // ----------------Effect-----------------\r\n    useEffect(()=>{\r\n        setIsLoading(true)\r\n        firebaseDB.child(\"Organizations\").on('value',snapshot=>setOrganizations(snapshot.val()))\r\n        firebaseDB.child(\"Contacts\").on(\"value\", snapshot => setContacts(snapshot.val()))\r\n        setIsLoading(false)\r\n    },[])\r\n    \r\n    const formActionsOrganizations = object=>{\r\n        if(currentId === '')\r\n            firebaseDB.child(\"Organizations\").push(\r\n                object,\r\n                error => {\r\n                    if(error){\r\n                        console.error(error);\r\n                    }\r\n                    else\r\n                    setCurrentId('')\r\n                }\r\n            )\r\n            else\r\n            firebaseDB.child(`Organizations/${currentId}`).set(\r\n                object,\r\n                error => {\r\n                    if(error){\r\n                        console.error(error);\r\n                    }else\r\n                        setCurrentId('')\r\n                }\r\n            )\r\n    }\r\n\r\n    const formActionsContacts = object=>{\r\n        if(currentId === '')\r\n            firebaseDB.child(\"Contacts\").push(\r\n                object,\r\n                error => {\r\n                    if(error){\r\n                        console.error(error);\r\n                    }\r\n                    else\r\n                    setCurrentId('')\r\n                }\r\n            )\r\n            else\r\n            firebaseDB.child(`Contacts/${currentId}`).set(\r\n                object,\r\n                error => {\r\n                    if(error){\r\n                        console.error(error);\r\n                    }else\r\n                        setCurrentId('')\r\n                }\r\n            )\r\n    }\r\n\r\n    const onDeleteContacts = key =>{\r\n        if(window.confirm('Warning! proceeding will delete this entry are your sure you want to continue?')){\r\n            firebaseDB.child(`Contacts/${key}`).remove(\r\n                error => {\r\n                    if(error){\r\n                        console.error(error);\r\n                    }else\r\n                        setCurrentId('');\r\n                }\r\n            )\r\n        }\r\n\r\n    }\r\n    const onDeleteOrganizations = key =>{\r\n        if(window.confirm('Warning! proceeding will delete this entry are your sure you want to continue?')){\r\n            firebaseDB.child(`Organizations/${key}`).remove(\r\n                error => {\r\n                    if(error){\r\n                        console.error(error);\r\n                    }else\r\n                        setCurrentId('');\r\n                }\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    return isLoading ? <div>Loading...</div> : (\r\n        <div>\r\n            <nav class=\"navbar navbar-dark bg-primary\">\r\n                <span class=\"navbar-brand justify-content-end\">Navbar</span>\r\n                <ul class=\"navbar-nav \">\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link active\" href=\"https://github.com/Laith-Kamaraldin/Administrate_InterviewProject#readme\">ReadMe </a>\r\n                    </li>\r\n                    <li class=\"nav-item active\">\r\n                        <a class=\"nav-link\" href=\"https://github.com/Laith-Kamaraldin/Administrate_InterviewProject\">GitHub Repo</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4 text-center\">Administrate Address Book</h1>\r\n                    <p className=\"lead text-center\">Project made for the Administrate technincal challange.</p>\r\n                </div>\r\n            </div>\r\n           \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                <div className=\"col-md-4 col-md-offset-2 bg-light border rounded-3\">\r\n                \r\n                <AddOrganizations {...({formActionsOrganizations,currentId,organizations})}/>\r\n                <AddPeople {...({formActionsContacts,currentId, contacts})}/>\r\n                \r\n                </div>\r\n                    <div className=\"col-md-8 col-md-offset-2 bg-light border rounded-3 \">\r\n                    <h5>Organizations:</h5>\r\n                    <div className=\"accoridian\">\r\n                <Accordion>\r\n                    {\r\n                        Object.keys(organizations).map((id) => {\r\n                            const organization = organizations[id]\r\n                                        return <Card className=\"card\" key={id}>\r\n                                            <Accordion.Toggle as={Card.Header} eventKey={id}>\r\n                                            <table class=\"table2\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                    <th scope=\"col\">{organization.organization}</th>\r\n                                                    <th scope=\"col\">{organization.mobile}</th>\r\n                                                    <th scope=\"col\">{organization.address}</th>\r\n                                                    <th scope=\"col\"><a className=\"btn text-primary\" onClick={()=> {setCurrentId(id)}}>\r\n                                                            <i className=\"fas fa-pencil-alt\"/>\r\n                                                        </a>\r\n                                                        <a className=\"btn text-danger\" onClick={()=> {onDeleteOrganizations(id)}}>\r\n                                                            <i className=\"fas fa-trash-alt\"/>\r\n                                                        </a></th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                            </table>\r\n                                            \r\n                                            </Accordion.Toggle>\r\n                                            <Accordion.Collapse eventKey={id}>\r\n                                                <Card.Body>\r\n\r\n                                                        <table className=\"table table-responsive table-sm table-borderless table-stripped\">\r\n                                                            <thead className=\"thead-light\">\r\n                                                        <tr>\r\n                                                            <th>First Name</th>\r\n                                                            <th>Last Name</th>\r\n                                                            <th>Email</th>\r\n                                                            <th>Mobile</th>\r\n                                                            <th>Organization</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Actions</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {\r\n                                                            Object.keys(contacts).map(id =>{\r\n                                                                const contact = contacts[id]\r\n                                                                return contact.organization === organization.organization ? <tr key={id}>\r\n                                                                    <td>{contact.firstName}</td>\r\n                                                                    <td>{contact.lastName}</td>\r\n                                                                    <td>{contact.email}</td>\r\n                                                                    <td>{contact.mobile}</td>\r\n                                                                    <td>{contact.organization}</td>\r\n                                                                    <td>{contact.address}</td>\r\n                                                                    <td>\r\n                                                                        <a className=\"btn text-primary\" onClick={()=> {setCurrentId(id)}}>\r\n                                                                            <i className=\"fas fa-pencil-alt\"/>\r\n                                                                        </a>\r\n                                                                        <a className=\"btn text-danger\" onClick={()=> {onDeleteContacts(id)}}>\r\n                                                                            <i className=\"fas fa-trash-alt\"/>\r\n                                                                        </a>\r\n                                                                    </td>\r\n                                                                    </tr> : null\r\n                                                                })\r\n                                                        }\r\n                                                    </tbody>\r\n                                                </table>\r\n\r\n\r\n                                                </Card.Body>\r\n                                            </Accordion.Collapse>\r\n                                                \r\n                                            </Card>\r\n                        })}\r\n\r\n                </Accordion>        \r\n\r\n\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n  \r\n\r\n\r\n                \r\n                </div>                   \r\n\r\n\r\n            </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Addresses;\r\n","import './App.css';\r\nimport Addresses from './components/AddressBook';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n        <Addresses/>\r\n    </div>  \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}